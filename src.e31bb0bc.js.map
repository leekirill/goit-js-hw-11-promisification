{"version":3,"sources":["../js/task-1.js","../js/task-2.js","../js/task-3.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","reject","canProcess","id","logSuccess","logError","warn","amount","catch"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n  // Твой код\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(ms);\n    }, ms);\n  });\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n","const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n  return new Promise(resolve => {\n    resolve(\n      allUsers.map(user =>\n        user.name === userName ? { ...user, active: !user.active } : user,\n      ),\n    );\n  });\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);\n","const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  const delay = randomIntegerFromInterval(200, 500);\n\n  return new Promise((resolve, reject) => {\n    const canProcess = Math.random() > 0.3;\n    setTimeout(() => {\n      if (canProcess) {\n        resolve(transaction.id, delay);\n      }\n      reject(transaction.id);\n    }, delay);\n  });\n};\n\nconst logSuccess = (id, time) =>\n  console.log(`Transaction ${id} processed in ${time}ms`);\n\nconst logError = id =>\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n","import '../js/task-1';\nimport '../js/task-2';\nimport '../js/task-3';\n"]}