{"version":3,"sources":["../js/task-1.js","../js/task-2.js","../js/task-3.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","reject","canProcess","id","logSuccess","logError","warn","amount","catch"],"mappings":";AAAA,IAAMA,EAAQ,SAAAC,GAEL,OAAA,IAAIC,QAAQ,SAAAC,GACjBC,WAAW,WACTD,EAAQF,IACPA,MAIDI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAGnBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ;;ACMjB,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EApBA,IAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GAC1B,OAAA,IAAIb,QAAQ,SAAAC,GACjBA,EACEW,EAASE,IAAI,SAAAC,GACXA,OAAAA,EAAKN,OAASI,EAAgBE,EAAAA,EAAAA,GAAAA,GAA9B,GAAA,CAAoCL,QAASK,EAAKL,SAAWK,QAM/DZ,EAAS,SAAAa,GAAgBX,OAAAA,QAAQY,MAAMD,IAE7CL,EAAgBH,EAAO,SAASD,KAAKJ,GACrCQ,EAAgBH,EAAO,OAAOD,KAAKJ;;ACpBnC,IAAMe,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAAAC,GAChB3B,IAAAA,EAAQoB,EAA0B,IAAK,KAEtC,OAAA,IAAIlB,QAAQ,SAACC,EAASyB,GACrBC,IAAAA,EAAaN,KAAKE,SAAW,GACnCrB,WAAW,WACLyB,GACF1B,EAAQwB,EAAYG,GAAI9B,GAE1B4B,EAAOD,EAAYG,KAClB9B,MAID+B,EAAa,SAACD,EAAIxB,GACtBC,OAAAA,QAAQC,IAAmBsB,eAAAA,OAAAA,EAAmBxB,kBAAAA,OAAAA,EAD7B,QAGb0B,EAAW,SAAAF,GACfvB,OAAAA,QAAQ0B,KAAqCH,gCAAAA,OAAAA,EAD5B,+BAGnBJ,EAAgB,CAAEI,GAAI,GAAII,OAAQ,MAAOzB,KAAKsB,GAAYI,MAAMH,GAEhEN,EAAgB,CAAEI,GAAI,GAAII,OAAQ,MAAOzB,KAAKsB,GAAYI,MAAMH,GAEhEN,EAAgB,CAAEI,GAAI,GAAII,OAAQ,KAAMzB,KAAKsB,GAAYI,MAAMH,GAE/DN,EAAgB,CAAEI,GAAI,GAAII,OAAQ,MAAOzB,KAAKsB,GAAYI,MAAMH;;AC5BhE,aAFA,QAAA,gBACA,QAAA,gBACA,QAAA","file":"src.af484c50.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n  // Твой код\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(ms);\n    }, ms);\n  });\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n","const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n  return new Promise(resolve => {\n    resolve(\n      allUsers.map(user =>\n        user.name === userName ? { ...user, active: !user.active } : user,\n      ),\n    );\n  });\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);\n","const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  const delay = randomIntegerFromInterval(200, 500);\n\n  return new Promise((resolve, reject) => {\n    const canProcess = Math.random() > 0.3;\n    setTimeout(() => {\n      if (canProcess) {\n        resolve(transaction.id, delay);\n      }\n      reject(transaction.id);\n    }, delay);\n  });\n};\n\nconst logSuccess = (id, time) =>\n  console.log(`Transaction ${id} processed in ${time}ms`);\n\nconst logError = id =>\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n","import '../js/task-1';\nimport '../js/task-2';\nimport '../js/task-3';\n"]}